server {
    listen 80;
    server_name chain.coinscos.com;
    rewrite ^(.*)$ https://$host$1 permanent;
}
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name chain.coinscos.com;
    ssl_certificate ssl/chain.coinscos.com.full.pem;
    ssl_certificate_key ssl/chain.coinscos.com.key.pem;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;
    ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;
    ssl_ciphers EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers on;
    ssl_buffer_size 4k;

    location / {
        add_header Access-Control-Allow-Origin $http_origin always;
        add_header Access-Control-Allow-Credentials true;
        add_header Access-Control-Allow-Methods *;
        add_header Access-Control-Allow-Headers $http_access_control_request_headers;

        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin $http_origin always;
            add_header Access-Control-Allow-Credentials true;
            add_header Access-Control-Allow-Methods *;
            add_header Access-Control-Allow-Headers $http_access_control_request_headers;
            return 204;
        }
        alias /var/www/gamecard/;
        index index.html;
        try_files $uri $uri/ /index.html;
    }

    #禁止访问目录
    location ^~ /api/admin/ {
        deny all;
        allow IP;
    }

    #禁止访问目录
    location ^~ /admin/ {
        deny all;
        allow IP;
    }

    location ~* /api/ {
        rewrite "^/api/(.*)$" /$1 break;
        proxy_connect_timeout 60s;
        proxy_read_timeout 3600s;
        proxy_send_timeout 3600s;
        proxy_http_version 1.1;
        proxy_pass http://127.0.0.1:8080;

        proxy_set_header Cookie $http_cookie;
        proxy_set_header Referer $http_referer;
        proxy_set_header Host $http_host;

        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Real-IP $remote_addr;

        proxy_set_header X-NginX-Proxy true;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        add_header Access-Control-Allow-Origin $http_origin always;
        add_header Access-Control-Allow-Credentials true;
        add_header Access-Control-Allow-Methods *;
        add_header Access-Control-Allow-Headers $http_access_control_request_headers;

        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin $http_origin always;
            add_header Access-Control-Allow-Credentials true;
            add_header Access-Control-Allow-Methods *;
            add_header Access-Control-Allow-Headers $http_access_control_request_headers;
            return 204;
        }
    }
}